[{"/Users/laurasikora/Code/Bloc/ffinder/client/src/index.js":"1","/Users/laurasikora/Code/Bloc/ffinder/client/src/App.jsx":"2","/Users/laurasikora/Code/Bloc/ffinder/client/src/routes/RestaurantDetailPage.jsx":"3","/Users/laurasikora/Code/Bloc/ffinder/client/src/routes/UpdatePage.jsx":"4","/Users/laurasikora/Code/Bloc/ffinder/client/src/routes/Home.jsx":"5","/Users/laurasikora/Code/Bloc/ffinder/client/src/components/Header.jsx":"6","/Users/laurasikora/Code/Bloc/ffinder/client/src/components/AddRestaurant.jsx":"7","/Users/laurasikora/Code/Bloc/ffinder/client/src/components/RestaurantList.jsx":"8","/Users/laurasikora/Code/Bloc/ffinder/client/src/context/RestaurantsContext.js":"9","/Users/laurasikora/Code/Bloc/ffinder/client/src/apis/RestaurantFinder.js":"10","/Users/laurasikora/Code/Bloc/ffinder/client/src/components/UpdateRestaurant.jsx":"11","/Users/laurasikora/Code/Bloc/ffinder/client/src/components/StarRating.jsx":"12","/Users/laurasikora/Code/Bloc/ffinder/client/src/components/Reviews.jsx":"13","/Users/laurasikora/Code/Bloc/ffinder/client/src/components/AddReview.jsx":"14"},{"size":144,"mtime":1607463130584,"results":"15","hashOfConfig":"16"},{"size":899,"mtime":1607695674852,"results":"17","hashOfConfig":"16"},{"size":1573,"mtime":1607636152073,"results":"18","hashOfConfig":"16"},{"size":270,"mtime":1607636160084,"results":"19","hashOfConfig":"16"},{"size":336,"mtime":1607636142830,"results":"20","hashOfConfig":"16"},{"size":216,"mtime":1607636055319,"results":"21","hashOfConfig":"16"},{"size":2185,"mtime":1607636026207,"results":"22","hashOfConfig":"16"},{"size":3806,"mtime":1607636077001,"results":"23","hashOfConfig":"16"},{"size":654,"mtime":1607636131985,"results":"24","hashOfConfig":"16"},{"size":118,"mtime":1607523849133,"results":"25","hashOfConfig":"16"},{"size":2327,"mtime":1607636116250,"results":"26","hashOfConfig":"16"},{"size":526,"mtime":1607636106581,"results":"27","hashOfConfig":"16"},{"size":2511,"mtime":1607636096316,"results":"28","hashOfConfig":"16"},{"size":2349,"mtime":1607636042950,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1utwvg8",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},"/Users/laurasikora/Code/Bloc/ffinder/client/src/index.js",[],["63","64"],"/Users/laurasikora/Code/Bloc/ffinder/client/src/App.jsx",[],"/Users/laurasikora/Code/Bloc/ffinder/client/src/routes/RestaurantDetailPage.jsx",["65"],"import React, { useContext, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { RestaurantsContext } from \"../context/RestaurantsContext\";\nimport RestaurantFinder from \"../apis/RestaurantFinder\";\nimport StarRating from \"../components/StarRating\";\nimport Reviews from \"../components/Reviews\";\nimport AddReview from \"../components/AddReview\";\n\nconst RestaurantDetailPage = () => {\n  const { id } = useParams();\n  const { selectedRestaurant, setSelectedRestaurant } = useContext(\n    RestaurantsContext\n  );\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await RestaurantFinder.get(`/${id}`);\n        console.log(response);\n\n        setSelectedRestaurant(response.data.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return (\n    <div>\n      {selectedRestaurant && (\n        <>\n          <h1 className=\"text-center display-1\">\n            {selectedRestaurant.restaurant.name}\n          </h1>\n          <div className=\"text-center\">\n            <StarRating rating={selectedRestaurant.restaurant.average_rating} />\n            <span className=\"text-warning ml-1\">\n              {selectedRestaurant.restaurant.count\n                ? `(${selectedRestaurant.restaurant.count})`\n                : \"(0)\"}\n            </span>\n          </div>\n          <div className=\"mt-3\">\n            <Reviews reviews={selectedRestaurant.reviews} />\n          </div>\n          <AddReview />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default RestaurantDetailPage;","/Users/laurasikora/Code/Bloc/ffinder/client/src/routes/UpdatePage.jsx",[],"/Users/laurasikora/Code/Bloc/ffinder/client/src/routes/Home.jsx",[],"/Users/laurasikora/Code/Bloc/ffinder/client/src/components/Header.jsx",[],"/Users/laurasikora/Code/Bloc/ffinder/client/src/components/AddRestaurant.jsx",[],"/Users/laurasikora/Code/Bloc/ffinder/client/src/components/RestaurantList.jsx",["66","67"],"import React, { useEffect, useContext } from \"react\";\nimport RestaurantFinder from \"../apis/RestaurantFinder\";\nimport { RestaurantsContext } from \"../context/RestaurantsContext\";\nimport { useHistory } from \"react-router-dom\";\nimport StarRating from \"./StarRating\";\n\nconst RestaurantList = (props) => {\n  const { restaurants, setRestaurants } = useContext(RestaurantsContext);\n  let history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await RestaurantFinder.get(\"/\");\n        console.log(response.data.data);\n        setRestaurants(response.data.data.restaurants);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n\n  const handleDelete = async (e, id) => {\n    e.stopPropagation();\n    try {\n      const response = await RestaurantFinder.delete(`/${id}`);\n      setRestaurants(\n        restaurants.filter((restaurant) => {\n          return restaurant.id !== id;\n        })\n      );\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleUpdate = (e, id) => {\n    e.stopPropagation();\n    history.push(`/restaurants/${id}/update`);\n  };\n\n  const handleRestaurantSelect = (id) => {\n    history.push(`/restaurants/${id}`);\n  };\n\n  const renderRating = (restaurant) => {\n    if (!restaurant.count) {\n      return <span className=\"text-warning\">0 reviews</span>;\n    }\n    return (\n      <>\n        <StarRating rating={restaurant.id} />\n        <span className=\"text-warning ml-1\">({restaurant.count})</span>\n      </>\n    );\n  };\n  return (\n    <div className=\"list-group\">\n      <table className=\"table table-hover table-dark\">\n        <thead>\n          <tr className=\"bg-primary\">\n            <th scope=\"col\">Restaurant</th>\n            <th scope=\"col\">Location</th>\n            <th scope=\"col\">Price Range</th>\n            <th scope=\"col\">Ratings</th>\n            <th scope=\"col\">Edit</th>\n            <th scope=\"col\">Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {restaurants &&\n            restaurants.map((restaurant) => {\n              return (\n                <tr\n                  onClick={() => handleRestaurantSelect(restaurant.id)}\n                  key={restaurant.id}\n                >\n                  <td>{restaurant.name}</td>\n                  <td>{restaurant.location}</td>\n                  <td>{\"$\".repeat(restaurant.price_range)}</td>\n                  <td>{renderRating(restaurant)}</td>\n                  <td>\n                    <button\n                      onClick={(e) => handleUpdate(e, restaurant.id)}\n                      className=\"btn btn-warning\"\n                    >\n                      Update\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      onClick={(e) => handleDelete(e, restaurant.id)}\n                      className=\"btn btn-danger\"\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          {/* <tr>\n            <td>mcdonalds</td>\n            <td>New YOrk</td>\n            <td>$$</td>\n            <td>Rating</td>\n            <td>\n              <button className=\"btn btn-warning\">Update</button>\n            </td>\n            <td>\n              <button className=\"btn btn-danger\">Delete</button>\n            </td>\n          </tr>\n          <tr>\n            <td>mcdonalds</td>\n            <td>New YOrk</td>\n            <td>$$</td>\n            <td>Rating</td>\n            <td>\n              <button className=\"btn btn-warning\">Update</button>\n            </td>\n            <td>\n              <button className=\"btn btn-danger\">Delete</button>\n            </td>\n          </tr> */}\n        </tbody>\n      </table>\n    </div>\n  );\n};\nexport default RestaurantList;","/Users/laurasikora/Code/Bloc/ffinder/client/src/context/RestaurantsContext.js",[],"/Users/laurasikora/Code/Bloc/ffinder/client/src/apis/RestaurantFinder.js",[],"/Users/laurasikora/Code/Bloc/ffinder/client/src/components/UpdateRestaurant.jsx",["68","69","70"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { RestaurantsContext } from \"../context/RestaurantsContext\";\nimport RestaurantFinder from \"../apis/RestaurantFinder\";\n\nconst UpdateRestaurant = (props) => {\n  const { id } = useParams();\n  let history = useHistory();\n  const { restaurants } = useContext(RestaurantsContext);\n  const [name, setName] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [priceRange, setPriceRange] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await RestaurantFinder.get(`/${id}`);\n      console.log(response.data.data);\n      setName(response.data.data.restaurant.name);\n      setLocation(response.data.data.restaurant.location);\n      setPriceRange(response.data.data.restaurant.price_range);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const updatedRestaurant = await RestaurantFinder.put(`/${id}`, {\n      name,\n      location,\n      price_range: priceRange,\n    });\n    history.push(\"/\");\n  };\n\n  return (\n    <div>\n      <form action=\"\">\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            id=\"name\"\n            className=\"form-control\"\n            type=\"text\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"location\">Location</label>\n          <input\n            value={location}\n            onChange={(e) => setLocation(e.target.value)}\n            id=\"location\"\n            className=\"form-control\"\n            type=\"text\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"price_range\">Price Range</label>\n          <input\n            value={priceRange}\n            onChange={(e) => setPriceRange(e.target.value)}\n            id=\"price_range\"\n            className=\"form-control\"\n            type=\"number\"\n          />\n        </div>\n        <button\n          type=\"submit\"\n          onClick={handleSubmit}\n          className=\"btn btn-primary\"\n        >\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default UpdateRestaurant;","/Users/laurasikora/Code/Bloc/ffinder/client/src/components/StarRating.jsx",[],"/Users/laurasikora/Code/Bloc/ffinder/client/src/components/Reviews.jsx",[],"/Users/laurasikora/Code/Bloc/ffinder/client/src/components/AddReview.jsx",["71"],"import React, { useState } from \"react\";\nimport RestaurantFinder from \"../apis/RestaurantFinder\";\nimport { useLocation, useParams, useHistory } from \"react-router-dom\";\n\nconst AddReview = () => {\n  const { id } = useParams();\n  const location = useLocation();\n  console.log(location);\n  const history = useHistory();\n  console.log(id);\n\n  const [name, setName] = useState(\"\");\n  const [reviewText, setReviewText] = useState(\"\");\n  const [rating, setRating] = useState(\"Rating\");\n\n  const handleSubmitReview = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await RestaurantFinder.post(`/${id}/addReview`, {\n        name,\n        review: reviewText,\n        rating,\n      });\n      history.push(\"/\");\n      history.push(location.pathname);\n    } catch (err) {}\n  };\n  return (\n    <div className=\"mb-2\">\n      <form action=\"\">\n        <div className=\"form-row\">\n          <div className=\"form-group col-8\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              id=\"name\"\n              placeholder=\"name\"\n              type=\"text\"\n              className=\"form-control\"\n            />\n          </div>\n          <div className=\"form-group col-4\">\n            <label htmlFor=\"rating\">Rating</label>\n            <select\n              value={rating}\n              onChange={(e) => setRating(e.target.value)}\n              id=\"rating\"\n              className=\"custom-select\"\n            >\n              <option disabled>Rating</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"Review\">Review</label>\n          <textarea\n            value={reviewText}\n            onChange={(e) => setReviewText(e.target.value)}\n            id=\"Review\"\n            className=\"form-control\"\n          ></textarea>\n        </div>\n        <button\n          type=\"submit\"\n          onClick={handleSubmitReview}\n          className=\"btn btn-primary\"\n        >\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddReview;",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":28,"column":6,"nodeType":"78","endLine":28,"endColumn":8,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"80","line":20,"column":6,"nodeType":"78","endLine":20,"endColumn":8,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":25,"column":13,"nodeType":"84","messageId":"85","endLine":25,"endColumn":21},{"ruleId":"82","severity":1,"message":"86","line":9,"column":11,"nodeType":"84","messageId":"85","endLine":9,"endColumn":22},{"ruleId":"76","severity":1,"message":"87","line":24,"column":6,"nodeType":"78","endLine":24,"endColumn":8,"suggestions":"88"},{"ruleId":"82","severity":1,"message":"89","line":28,"column":11,"nodeType":"84","messageId":"85","endLine":28,"endColumn":28},{"ruleId":"82","severity":1,"message":"83","line":19,"column":13,"nodeType":"84","messageId":"85","endLine":19,"endColumn":21},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'setSelectedRestaurant'. Either include them or remove the dependency array.","ArrayExpression",["92"],"React Hook useEffect has a missing dependency: 'setRestaurants'. Either include it or remove the dependency array.",["93"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'restaurants' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["94"],"'updatedRestaurant' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [id, setSelectedRestaurant]",{"range":"101","text":"102"},"Update the dependencies array to be: [setRestaurants]",{"range":"103","text":"104"},"Update the dependencies array to be: [id]",{"range":"105","text":"106"},[835,837],"[id, setSelectedRestaurant]",[682,684],"[setRestaurants]",[905,907],"[id]"]